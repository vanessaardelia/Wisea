{"version":3,"sources":["webpack:///src/app/register/register.page.html","webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.module.ts","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","formBuilder","router","authService","alertController","loadingController","confirmHide","passwordHide","credentialForm","group","name","required","username","email","password","minLength","confirm","phone","maxLength","validator","create","loading","present","register","value","then","user","dismiss","navigateByUrl","replaceUrl","err","header","message","buttons","alert","selector","template"],"mappings":"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","file":"register-register-module-es5.js","sourcesContent":["export default \"<ion-content [fullscreen]=\\\"true\\\" color=\\\"background\\\">\\r\\n  <ion-item-group id=\\\"container\\\">\\r\\n    <ion-img src='assets/login/register.svg' class=\\\"planeImg\\\"></ion-img>\\r\\n    <ion-title color=\\\"primary\\\">\\r\\n      <strong>Cie..</strong>\\r\\n      <p><strong>Buat akun</strong></p>\\r\\n    </ion-title>\\r\\n    <form [formGroup]=\\\"credentialForm\\\">\\r\\n      <mat-label>Nama Lengkap</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput formControlName=\\\"name\\\">\\r\\n        <mat-error *ngIf=\\\"(credentialForm.get('name').dirty || credentialForm.get('name').touched) && credentialForm.get('name').errors\\\">\\r\\n          <span *ngIf=\\\"credentialForm.get('name').errors.required\\\">Full name is required</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Username</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput formControlName=\\\"username\\\">\\r\\n        <mat-error *ngIf=\\\"(credentialForm.get('username').dirty || credentialForm.get('username').touched) && credentialForm.get('username').errors\\\">\\r\\n          <span *ngIf=\\\"credentialForm.get('username').errors.required\\\">Username is required</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Email</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput formControlName=\\\"email\\\">\\r\\n        <mat-error *ngIf=\\\"(credentialForm.get('email').dirty || credentialForm.get('email').touched) && credentialForm.get('email').errors\\\">\\r\\n          <span *ngIf=\\\"credentialForm.get('email').errors.required\\\">Email is required</span>\\r\\n          <span *ngIf=\\\"credentialForm.get('email').errors.email\\\">Email is invalid</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Password</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput [type]=\\\"passwordHide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"passwordHide = !passwordHide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"passwordHide\\\">\\r\\n          {{passwordHide ? 'visibility_off' : 'visibility'}}\\r\\n        </mat-icon>\\r\\n        <mat-error *ngIf=\\\"(credentialForm.get('password').dirty || credentialForm.get('password').touched) && credentialForm.get('password').errors\\\">\\r\\n          <span *ngIf=\\\"credentialForm.get('password').errors.required\\\">Password is required</span>\\r\\n          <span *ngIf=\\\"credentialForm.get('password').errors.minlength\\\">Password needs to be 6 characters</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Konfirmasi Password</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput [type]=\\\"confirmHide ? 'password' : 'text'\\\" formControlName=\\\"confirm\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"confirmHide = !confirmHide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"confirmHide\\\">\\r\\n          {{confirmHide ? 'visibility_off' : 'visibility'}}\\r\\n        </mat-icon>\\r\\n        <mat-error *ngIf=\\\"(credentialForm.get('confirm').dirty || credentialForm.get('confirm').touched) && credentialForm.get('confirm').errors\\\">\\r\\n          <span *ngIf=\\\"credentialForm.get('confirm').errors.required\\\">Confirm Password is required</span>\\r\\n          <span *ngIf=\\\"credentialForm.get('confirm').errors.mustMatch\\\">Password and Confirm Password didn't match</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-label>Nomor Telepon</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput formControlName=\\\"phone\\\">\\r\\n        <mat-error *ngIf=\\\"(credentialForm.get('phone').dirty || credentialForm.get('phone').touched) && credentialForm.get('phone').errors\\\">\\r\\n          <span *ngIf=\\\"credentialForm.get('phone').errors.required\\\">Phone number is required</span>\\r\\n          <span *ngIf=\\\"credentialForm.get('phone').errors.minlength || credentialForm.get('phone').errors.maxlength\\\">Phone needs to be between 10 - 12 characters</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </form>\\r\\n    <ion-button (click)=\\\"register()\\\" expand=\\\"full\\\" color=\\\"primary\\\" shape=\\\"round\\\" [disabled]=\\\"!credentialForm.valid\\\">Daftar</ion-button>\\r\\n    <p style=\\\"text-align: center\\\">\\r\\n      Sudah memiliki akun? Login\\r\\n      <span routerLink=\\\"/login\\\" class=\\\"login\\\">disini</span>\\r\\n    </p>\\r\\n  </ion-item-group>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        RegisterPageRoutingModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatIconModule\r\n    ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \"#container {\\n  position: absolute;\\n  left: 5%;\\n  right: 5%;\\n  top: 5%;\\n  bottom: 10%;\\n  color: var(--ion-color-secondary-contrast);\\n}\\n#container ion-title {\\n  padding: 130px 0px 50px 0px;\\n}\\n#container strong {\\n  font-size: 36px;\\n  line-height: 28px;\\n  margin-top: 20px;\\n}\\n#container ion-img {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n#container ion-button {\\n  margin-top: 10px;\\n  font-weight: 700;\\n}\\n.planeImg {\\n  left: 165px;\\n  top: 0%;\\n  z-index: 1;\\n  float: right;\\n  width: 206px;\\n  height: 249px;\\n  position: absolute;\\n}\\n.reset-password {\\n  float: right;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n.register {\\n  color: #946E41;\\n  font-weight: bold;\\n}\\nmat-form-field {\\n  width: 100%;\\n}\\nmat-label {\\n  /*change color of label*/\\n  color: #946E41 !important;\\n  font-weight: 500;\\n}\\n.mat-icon {\\n  color: #946E41;\\n}\\n.mat-button.mat-primary .mat-button-focus-overlay {\\n  background-color: transparent;\\n}\\n::ng-deep .mat-form-field-underline {\\n  /*change color of underline*/\\n  background-color: #946E41 !important;\\n}\\n::ng-deep .mat-form-field-ripple {\\n  /*change color of underline when focused*/\\n  background-color: #946E41 !important;\\n}\\n::ng-deep .mat-form-field-wrapper {\\n  margin-bottom: 20px;\\n}\\n.login {\\n  color: var(--ion-color-primary);\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxXQUFBO0VBRUEsMENBQUE7QUFBRjtBQUVFO0VBQ0UsMkJBQUE7QUFBSjtBQUdFO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFESjtBQUlFO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFGSjtBQUtFO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtBQUhKO0FBT0E7RUFDRSxXQUFBO0VBQ0EsT0FBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtBQUpGO0FBT0E7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFKRjtBQU9BO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FBSkY7QUFPQTtFQUNFLFdBQUE7QUFKRjtBQU9BO0VBQ0Usd0JBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0FBSkY7QUFPQTtFQUNFLGNBQUE7QUFKRjtBQU9BO0VBQ0UsNkJBQUE7QUFKRjtBQVFFO0VBQ0UsNEJBQUE7RUFDQSxvQ0FBQTtBQUxKO0FBUUU7RUFDRSx5Q0FBQTtFQUNBLG9DQUFBO0FBTko7QUFTRTtFQUNFLG1CQUFBO0FBUEo7QUFXQTtFQUNFLCtCQUFBO0VBQ0EsaUJBQUE7QUFSRiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiA1JTtcclxuICByaWdodDogNSU7XHJcbiAgdG9wOiA1JTtcclxuICBib3R0b206IDEwJTtcclxuICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeS1jb250cmFzdCk7XHJcblxyXG4gIGlvbi10aXRsZSB7XHJcbiAgICBwYWRkaW5nOiAxMzBweCAwcHggNTBweCAwcHg7XHJcbiAgfVxyXG5cclxuICBzdHJvbmcge1xyXG4gICAgZm9udC1zaXplOiAzNnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgaW9uLWltZyB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgaW9uLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICB9XHJcbn1cclxuXHJcbi5wbGFuZUltZyB7XHJcbiAgbGVmdDogMTY1cHg7XHJcbiAgdG9wOiAwJTtcclxuICB6LWluZGV4OiAxO1xyXG4gIGZsb2F0OiByaWdodDtcclxuICB3aWR0aDogMjA2cHg7XHJcbiAgaGVpZ2h0OiAyNDlweDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbn1cclxuXHJcbi5yZXNldC1wYXNzd29yZCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIG1hcmdpbjogMHB4O1xyXG4gIHBhZGRpbmc6IDBweDtcclxufVxyXG5cclxuLnJlZ2lzdGVyIHtcclxuICBjb2xvcjogIzk0NkU0MTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtbGFiZWwge1xyXG4gIC8qY2hhbmdlIGNvbG9yIG9mIGxhYmVsKi9cclxuICBjb2xvcjogIzk0NkU0MSAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5tYXQtaWNvbiB7XHJcbiAgY29sb3I6ICM5NDZFNDE7XHJcbn1cclxuXHJcbi5tYXQtYnV0dG9uLm1hdC1wcmltYXJ5IC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xyXG4gICAgLypjaGFuZ2UgY29sb3Igb2YgdW5kZXJsaW5lKi9cclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM5NDZFNDEgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xyXG4gICAgLypjaGFuZ2UgY29sb3Igb2YgdW5kZXJsaW5lIHdoZW4gZm9jdXNlZCovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTQ2RTQxICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAubWF0LWZvcm0tZmllbGQtd3JhcHBlcntcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ubG9naW4ge1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../service/auth.service';\r\nimport {AlertController, LoadingController} from '@ionic/angular';\r\nimport {ConfirmPasswordValidator} from './confirm-password.validator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  credentialForm: FormGroup;\r\n  confirmHide = true;\r\n  passwordHide = true;\r\n\r\n  constructor(\r\n      private formBuilder: FormBuilder,\r\n      private router: Router,\r\n      private authService: AuthService,\r\n      private alertController: AlertController,\r\n      private loadingController: LoadingController,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.credentialForm = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      username: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirm: ['', [Validators.required, Validators.minLength(6)]],\r\n      phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(12)]],\r\n    }, {\r\n      validator: ConfirmPasswordValidator('password', 'confirm'),\r\n    });\r\n  }\r\n\r\n  async register() {\r\n    const loading = await this.loadingController.create();\r\n    await loading.present();\r\n\r\n    this.authService.register(this.credentialForm.value).then(user => {\r\n      loading.dismiss();\r\n      this.router.navigateByUrl('/menu/tabs/home', { replaceUrl: true });\r\n    }, async err => {\r\n      loading.dismiss();\r\n      const alert = await this.alertController.create({\r\n        header: 'Registrasi akun gagal',\r\n        message: err.message,\r\n        buttons: ['OK'],\r\n      });\r\n\r\n      await alert.present();\r\n    });\r\n  }\r\n}\r\n"]}