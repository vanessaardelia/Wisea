{"version":3,"sources":["webpack:///src/app/reset-password/email-confirmation/email-confirmation.page.html","webpack:///src/app/reset-password/email-confirmation/email-confirmation-routing.module.ts","webpack:///src/app/reset-password/email-confirmation/email-confirmation.module.ts","webpack:///src/app/reset-password/email-confirmation/email-confirmation.page.scss","webpack:///src/app/reset-password/email-confirmation/email-confirmation.page.ts"],"names":["routes","path","component","EmailConfirmationPageRoutingModule","imports","forChild","exports","EmailConfirmationPageModule","declarations","EmailConfirmationPage","formBuilder","router","authService","route","loadingController","alertController","confirmHide","passwordHide","confirmPasswordForm","group","password","required","minLength","confirm","validator","create","loading","present","value","code","snapshot","queryParams","oobCode","console","log","confirmResetPassword","then","dismiss","presentAlert","logout","navigateByUrl","replaceUrl","err","message","header","buttons","alert","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,kCAAkC;AAAA;AAAA,O;;AAAlCA,wCAAkC,6DAJ9C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI8C,GAAlCH,kCAAkC,CAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWAI,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAbvC,+DAAS;AACNH,eAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,qGAJK,EAKL,kEALK,EAML,sEANK,EAOL,+EAPK,EAQL,oEARK,CADH;AAWRI,oBAAY,EAAE,CAAC,8EAAD;AAXN,OAAT,CAauC,GAA3BD,2BAA2B,CAA3B;;;;;;;;;;;;;;;;AC3Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFE,qBAAqB;AAKhC,uCACYC,WADZ,EAEYC,MAFZ,EAGYC,WAHZ,EAIYC,KAJZ,EAKYC,iBALZ,EAMYC,eANZ,EAM4C;AAAA;;AALhC,eAAAL,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AATZ,eAAAC,WAAA,GAAc,IAAd;AACA,eAAAC,YAAA,GAAe,IAAf;AASK;;AAZ2B;AAAA;AAAA,qCAcrB;AACT,iBAAKC,mBAAL,GAA2B,KAAKR,WAAL,CAAiBS,KAAjB,CAAuB;AAChDC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL,CADsC;AAEhDC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAFuC,aAAvB,EAGxB;AACDE,uBAAS,EAAE,sGAAyB,UAAzB,EAAqC,SAArC;AADV,aAHwB,CAA3B;AAMD;AArB+B;AAAA;AAAA,oCAuBhB;;;;;;;;;;AACE,6BAAM,KAAKV,iBAAL,CAAuBW,MAAvB,EAAN;;;AAAVC,6B;;AACN,6BAAMA,OAAO,CAACC,OAAR,EAAN;;;AAEMP,8B,GAAW,KAAKF,mBAAL,CAAyBU,KAAzB,CAA+BR,Q;AAC1CS,0B,GAAO,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBC,WAApB,CAAgCC,O;AAC7CC,6BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,IAA1B;AAEA,2BAAKjB,WAAL,CAAiBuB,oBAAjB,CAAsCN,IAAtC,EAA4CT,QAA5C,EAAsDgB,IAAtD,CAA2D,YAAM;AAC/DV,+BAAO,CAACW,OAAR;;AACA,6BAAI,CAACC,YAAL,CAAkB,oCAAlB,EAAwD,kDAAxD;;AACA,6BAAI,CAAC1B,WAAL,CAAiB2B,MAAjB,GAA0BH,IAA1B,CAA+B,YAAM;AACnC,+BAAI,CAACzB,MAAL,CAAY6B,aAAZ,CAA0B,QAA1B,EAAoC;AAAEC,sCAAU,EAAE;AAAd,2BAApC;AACD,yBAFD;AAGD,uBAND,EAMG,UAAMC,GAAN;AAAA,+BAAa;AAAA;AAAA;AAAA;AAAA;AACdhB,yCAAO,CAACW,OAAR;AACA,uCAAKC,YAAL,CAAkB,gCAAlB,EAAoDI,GAAG,CAACC,OAAxD;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAb;AAAA,uBANH;;;;;;;;;AAUD;AAzC+B;AAAA;AAAA,uCA2CbC,MA3Ca,EA2CLD,OA3CK,EA2CI;;;;;;;;AACpB,6BAAM,KAAK5B,eAAL,CAAqBU,MAArB,CAA4B;AAC9CmB,8BAAM,EAANA,MAD8C;AAE9CD,+BAAO,EAAPA,OAF8C;AAG9CE,+BAAO,EAAE,CAAC,IAAD;AAHqC,uBAA5B,CAAN;;;AAARC,2B;;AAMN,6BAAMA,KAAK,CAACnB,OAAN,EAAN;;;;;;;;;AACD;AAnD+B;;AAAA;AAAA,S;;;;gBAX1B;;gBACgB;;gBAChB;;gBADA;;gBAEiB;;gBAAjB;;;;AAQKlB,2BAAqB,6DALjC,gEAAU;AACTsC,gBAAQ,EAAE,wBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,qIAFS;;;;AAAA,OAAV,CAKiC,GAArBvC,qBAAqB,CAArB","file":"email-confirmation-email-confirmation-module-es5.js","sourcesContent":["export default \"<ion-content color=\\\"background\\\">\\r\\n  <ion-item-group id=\\\"container\\\">\\r\\n    <ion-img src=\\\"assets/login/email-confirm.svg\\\"></ion-img>\\r\\n    <ion-title>\\r\\n      <p>Diingat ya, jangan sampai lupa lagi</p>\\r\\n    </ion-title>\\r\\n    <form [formGroup]=\\\"confirmPasswordForm\\\">\\r\\n      <mat-label>Password</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput [type]=\\\"passwordHide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"passwordHide = !passwordHide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"passwordHide\\\">\\r\\n          {{passwordHide ? 'visibility_off' : 'visibility'}}\\r\\n        </mat-icon>\\r\\n        <mat-error *ngIf=\\\"(confirmPasswordForm.get('password').dirty || confirmPasswordForm.get('password').touched) && confirmPasswordForm.get('password').errors\\\">\\r\\n          <span *ngIf=\\\"confirmPasswordForm.get('password').errors.required\\\">Password is required</span>\\r\\n          <span *ngIf=\\\"confirmPasswordForm.get('password').errors.minlength\\\">Password needs to be 6 characters</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-label>Konfirmasi Password</mat-label>\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n        <input matInput [type]=\\\"confirmHide ? 'password' : 'text'\\\" formControlName=\\\"confirm\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"confirmHide = !confirmHide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"confirmHide\\\">\\r\\n          {{confirmHide ? 'visibility_off' : 'visibility'}}\\r\\n        </mat-icon>\\r\\n        <mat-error *ngIf=\\\"(confirmPasswordForm.get('confirm').dirty || confirmPasswordForm.get('confirm').touched) && confirmPasswordForm.get('confirm').errors\\\">\\r\\n          <span *ngIf=\\\"confirmPasswordForm.get('confirm').errors.required\\\">Confirm Password is required</span>\\r\\n          <span *ngIf=\\\"confirmPasswordForm.get('confirm').errors.mustMatch\\\">Password and Confirm Password didn't match</span>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </form>\\r\\n    <ion-button (click)=\\\"confirm()\\\" expand=\\\"full\\\" color=\\\"primary\\\" [disabled]=\\\"!confirmPasswordForm.valid\\\" shape=\\\"round\\\">Reset</ion-button>\\r\\n    <ion-button routerLink=\\\"/login\\\" expand=\\\"full\\\" color=\\\"tertiary\\\" shape=\\\"round\\\">Batalkan</ion-button>\\r\\n  </ion-item-group>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmailConfirmationPage } from './email-confirmation.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmailConfirmationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EmailConfirmationPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EmailConfirmationPageRoutingModule } from './email-confirmation-routing.module';\r\n\r\nimport { EmailConfirmationPage } from './email-confirmation.page';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        EmailConfirmationPageRoutingModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatIconModule\r\n    ],\r\n  declarations: [EmailConfirmationPage]\r\n})\r\nexport class EmailConfirmationPageModule {}\r\n","export default \"#container {\\n  position: absolute;\\n  left: 5%;\\n  right: 5%;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  color: var(--ion-color-secondary-contrast);\\n}\\n#container ion-title {\\n  padding: 35px 0px;\\n  text-align: center;\\n}\\n#container p {\\n  font-size: 14px;\\n  color: #BDBDBD;\\n  line-height: 20px;\\n  font-weight: 350;\\n}\\n#container ion-img {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 300px;\\n  height: 300px;\\n}\\n#container ion-button {\\n  margin-top: 10px;\\n  font-weight: 700;\\n}\\n.planeImg {\\n  left: 130px;\\n  top: 0%;\\n  z-index: 1;\\n  float: right;\\n  width: 200px;\\n  position: absolute;\\n  transform: rotate(-10deg);\\n}\\n.reset-password {\\n  float: right;\\n  margin: 0px;\\n  padding: 0px;\\n}\\nmat-form-field {\\n  width: 100%;\\n}\\nmat-label {\\n  /*change color of label*/\\n  color: #946E41 !important;\\n  font-weight: 500;\\n}\\n.mat-icon {\\n  color: #946E41;\\n}\\n.mat-button.mat-primary .mat-button-focus-overlay {\\n  background-color: transparent;\\n}\\n::ng-deep .mat-form-field-underline {\\n  /*change color of underline*/\\n  background-color: #946E41 !important;\\n}\\n::ng-deep .mat-form-field-ripple {\\n  /*change color of underline when focused*/\\n  background-color: #946E41 !important;\\n}\\n::ng-deep .mat-form-field-wrapper {\\n  margin-bottom: 23px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXQtcGFzc3dvcmQvZW1haWwtY29uZmlybWF0aW9uL2VtYWlsLWNvbmZpcm1hdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0VBQ0EsMENBQUE7QUFDRjtBQUNFO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtBQUNKO0FBRUU7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFBSjtBQUdFO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQURKO0FBSUU7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0FBRko7QUFNQTtFQUNFLFdBQUE7RUFDQSxPQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQUhGO0FBTUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFIRjtBQU1BO0VBQ0UsV0FBQTtBQUhGO0FBTUE7RUFDRSx3QkFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7QUFIRjtBQU1BO0VBQ0UsY0FBQTtBQUhGO0FBTUE7RUFDRSw2QkFBQTtBQUhGO0FBT0U7RUFDRSw0QkFBQTtFQUNBLG9DQUFBO0FBSko7QUFPRTtFQUNFLHlDQUFBO0VBQ0Esb0NBQUE7QUFMSjtBQVFFO0VBQ0UsbUJBQUE7QUFOSiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LXBhc3N3b3JkL2VtYWlsLWNvbmZpcm1hdGlvbi9lbWFpbC1jb25maXJtYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDUlO1xyXG4gIHJpZ2h0OiA1JTtcclxuICB0b3A6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnktY29udHJhc3QpO1xyXG5cclxuICBpb24tdGl0bGUge1xyXG4gICAgcGFkZGluZzogMzVweCAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICBwIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAjQkRCREJEO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogMzUwO1xyXG4gIH1cclxuXHJcbiAgaW9uLWltZyB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgaGVpZ2h0OiAzMDBweDtcclxuICB9XHJcblxyXG4gIGlvbi1idXR0b24ge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgfVxyXG59XHJcblxyXG4ucGxhbmVJbWcge1xyXG4gIGxlZnQ6IDEzMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgei1pbmRleDogMTtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTBkZWcpO1xyXG59XHJcblxyXG4ucmVzZXQtcGFzc3dvcmQge1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBtYXJnaW46IDBweDtcclxuICBwYWRkaW5nOiAwcHg7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LWxhYmVsIHtcclxuICAvKmNoYW5nZSBjb2xvciBvZiBsYWJlbCovXHJcbiAgY29sb3I6ICM5NDZFNDEgIWltcG9ydGFudDtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcblxyXG4ubWF0LWljb24ge1xyXG4gIGNvbG9yOiAjOTQ2RTQxO1xyXG59XHJcblxyXG4ubWF0LWJ1dHRvbi5tYXQtcHJpbWFyeSAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIHtcclxuICAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcclxuICAgIC8qY2hhbmdlIGNvbG9yIG9mIHVuZGVybGluZSovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTQ2RTQxICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcclxuICAgIC8qY2hhbmdlIGNvbG9yIG9mIHVuZGVybGluZSB3aGVuIGZvY3VzZWQqL1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzk0NkU0MSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXJ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyM3B4O1xyXG4gIH1cclxufVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthService} from '../../service/auth.service';\r\nimport {AlertController, LoadingController} from '@ionic/angular';\r\nimport {ConfirmPasswordValidator} from '../../register/confirm-password.validator';\r\n\r\n@Component({\r\n  selector: 'app-email-confirmation',\r\n  templateUrl: './email-confirmation.page.html',\r\n  styleUrls: ['./email-confirmation.page.scss'],\r\n})\r\nexport class EmailConfirmationPage implements OnInit {\r\n  confirmPasswordForm: FormGroup;\r\n  confirmHide = true;\r\n  passwordHide = true;\r\n\r\n  constructor(\r\n      private formBuilder: FormBuilder,\r\n      private router: Router,\r\n      private authService: AuthService,\r\n      private route: ActivatedRoute,\r\n      private loadingController: LoadingController,\r\n      private alertController: AlertController,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.confirmPasswordForm = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirm: ['', [Validators.required, Validators.minLength(6)]],\r\n    }, {\r\n      validator: ConfirmPasswordValidator('password', 'confirm'),\r\n    });\r\n  }\r\n\r\n  async confirm() {\r\n    const loading = await this.loadingController.create();\r\n    await loading.present();\r\n\r\n    const password = this.confirmPasswordForm.value.password;\r\n    const code = this.route.snapshot.queryParams.oobCode;\r\n    console.log('OOB Code: ', code);\r\n\r\n    this.authService.confirmResetPassword(code, password).then(() => {\r\n      loading.dismiss();\r\n      this.presentAlert('Konfirmasi password baru berhasil!', 'Silahkan login kembali menggunakan password baru');\r\n      this.authService.logout().then(() => {\r\n        this.router.navigateByUrl('/login', { replaceUrl: true });\r\n      });\r\n    }, async err => {\r\n      loading.dismiss();\r\n      this.presentAlert('Konfirmasi password baru gagal', err.message);\r\n    });\r\n  }\r\n\r\n  async presentAlert(header, message) {\r\n    const alert = await this.alertController.create({\r\n      header,\r\n      message,\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n"]}